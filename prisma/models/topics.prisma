model Topic {
  id             String   @id @default(cuid())
  guildSnowflake String
  name           String
  summary        String
  createdAt      DateTime @default(now())
  guild          Guild    @relation(fields: [guildSnowflake], references: [snowflake])

  TopicMessage TopicMessage[]
}

model Message {
  id               String   @id @default(cuid())
  guildSnowflake   String
  channelSnowflake String
  messageSnowflake String
  createdAt        DateTime @default(now())
  guild            Guild    @relation(fields: [guildSnowflake], references: [snowflake])

  TopicMessage TopicMessage[]

  @@unique([guildSnowflake, channelSnowflake, messageSnowflake])
}

model TopicMessage {
  id             String  @id @default(cuid())
  topicId        String
  messageId      String
  relevanceScore Float
  topic          Topic   @relation(fields: [topicId], references: [id])
  message        Message @relation(fields: [messageId], references: [id])

  @@unique([topicId, messageId])
}

// INTROSPECTED: See `topic_embeddings` migration
model topic_summary_embeddings_store {
  embedding_uuid String                @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  id             String
  chunk_seq      Int
  chunk          String
  embedding      Unsupported("vector")

  @@unique([id, chunk_seq])
}
